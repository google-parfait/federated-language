# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

module(name = "federated_language")

bazel_dep(name = "protobuf", version = "28.3")
bazel_dep(name = "rules_license", version = "1.0.0")
bazel_dep(name = "rules_python", version = "0.37.2")

# SUPPORTED_PYTHON_VERSIONS = [
#     "3.9",
#     "3.10",
#     "3.11",
# ]
# DEFAULT_PYTHON_VERSION = "3.11"

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    python_version = "3.9",
)
python.toolchain(
    python_version = "3.10",
)
python.toolchain(
    is_default = True,
    python_version = "3.11",
)
use_repo(python, python = "python_versions")

# DO_NOT_SUBMIT
# for python_version in SUPPORTED_PYTHON_VERSIONS:
#     python.toolchain(
#         is_default = python_version == DEFAULT_PYTHON_VERSION,
#         python_version = python_version,
#     )

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pypi",
    python_version = "3.9",
    requirements_lock = "//:requirements_lock_3_9.txt",
)
pip.parse(
    hub_name = "pypi",
    python_version = "3.10",
    requirements_lock = "//:requirements_lock_3_10.txt",
)
pip.parse(
    hub_name = "pypi",
    python_version = "3.11",
    requirements_lock = "//:requirements_lock_3_11.txt",
)
use_repo(pip, "pypi")

# DO_NOT_SUBMIT
# for python_version in SUPPORTED_PYTHON_VERSIONS:
#     pip.parse(
#         hub_name = "pypi",
#         python_version = python_version,
#         requirements_lock = "//:requirements_lock_{}.txt".format(python_version.replace(".", "_")),
#     )
