# Requirements for the Federated Language development environment.
#
# If you add a *new* dependency and it is required by the Federated Language
# package, also add the dependency to
# the `pyproject.toml` configuration.
#
# If you update the version of an *existing* dependency and it is required by
# the Federated Language package, also update the version of the dependency in
# the `pyproject.toml` configuration.
#
# *   For packages that have a stable release, we use a version that is
#     compatible with that release (e.g. `~=x.y`). See
#     https://peps.python.org/pep-0440/#compatible-release for more information.
# *   For packages that do not have a stable release, we use a version that
#     matches a release that has been tested (e.g. `==x.y.z`). See
#     https://peps.python.org/pep-0440/#version-matching for more information.
#
# Note: There is bug in `pip` when multiple packages use the compatible release
# operator `~=` to specify a version and one of those versions ends in `0`. See
# https://github.com/pypa/pip/issues/9613 for more information. In this case,
# use the equivalent clause `>=x.0,==x.*` instead of `~=x.0`.
#
# This assumes that the packages follows Semantic Versioning, see
# https://semver.org/. If a package follows a different versioning scheme or
# requires unique handling, we use a different version specifier and comment the
# versioning scheme or reasoning.

absl-py>=1.0,==1.*
attrs~=23.1
dm-tree==0.1.8
googleapis-common-protos>=1.61.0,==1.61.*
ml_dtypes>=0.2.0,==0.2.*
numpy~=1.25
typing-extensions>=4.5.0,==4.5.*
